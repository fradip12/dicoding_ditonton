// Mocks generated by Mockito 5.2.0 from annotations
// in series/test/presentation/pages/home_tv_widget_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i8;

import 'package:bloc/bloc.dart' as _i9;
import 'package:common/utils/state_enum.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:series/domain/entities/tv/tv.dart' as _i7;
import 'package:series/domain/usecases/tv/get_tv_now_playing.dart' as _i2;
import 'package:series/domain/usecases/tv/get_tv_popular.dart' as _i3;
import 'package:series/domain/usecases/tv/get_tv_toprated.dart' as _i4;
import 'package:series/presentation/bloc/tv/tv_list_bloc/tv_list_bloc.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetTvNowPlayingMovies_0 extends _i1.Fake
    implements _i2.GetTvNowPlayingMovies {}

class _FakeGetTvPopular_1 extends _i1.Fake implements _i3.GetTvPopular {}

class _FakeGetTvTopRated_2 extends _i1.Fake implements _i4.GetTvTopRated {}

class _FakeTvListState_3 extends _i1.Fake implements _i5.TvListState {}

/// A class which mocks [TvListBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvListBloc extends _i1.Mock implements _i5.TvListBloc {
  MockTvListBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTvNowPlayingMovies get getNowPlayingTv =>
      (super.noSuchMethod(Invocation.getter(#getNowPlayingTv),
              returnValue: _FakeGetTvNowPlayingMovies_0())
          as _i2.GetTvNowPlayingMovies);
  @override
  _i3.GetTvPopular get getTvPopular =>
      (super.noSuchMethod(Invocation.getter(#getTvPopular),
          returnValue: _FakeGetTvPopular_1()) as _i3.GetTvPopular);
  @override
  _i4.GetTvTopRated get getTvToprated =>
      (super.noSuchMethod(Invocation.getter(#getTvToprated),
          returnValue: _FakeGetTvTopRated_2()) as _i4.GetTvTopRated);
  @override
  _i6.RequestState get nowPlayingState =>
      (super.noSuchMethod(Invocation.getter(#nowPlayingState),
          returnValue: _i6.RequestState.Empty) as _i6.RequestState);
  @override
  set nowPlayingState(_i6.RequestState? _nowPlayingState) =>
      super.noSuchMethod(Invocation.setter(#nowPlayingState, _nowPlayingState),
          returnValueForMissingStub: null);
  @override
  List<_i7.TV> get nowPlayingMovies =>
      (super.noSuchMethod(Invocation.getter(#nowPlayingMovies),
          returnValue: <_i7.TV>[]) as List<_i7.TV>);
  @override
  set nowPlayingMovies(List<_i7.TV>? _nowPlayingMovies) => super.noSuchMethod(
      Invocation.setter(#nowPlayingMovies, _nowPlayingMovies),
      returnValueForMissingStub: null);
  @override
  _i6.RequestState get popularState =>
      (super.noSuchMethod(Invocation.getter(#popularState),
          returnValue: _i6.RequestState.Empty) as _i6.RequestState);
  @override
  set popularState(_i6.RequestState? _popularState) =>
      super.noSuchMethod(Invocation.setter(#popularState, _popularState),
          returnValueForMissingStub: null);
  @override
  List<_i7.TV> get popularMovies =>
      (super.noSuchMethod(Invocation.getter(#popularMovies),
          returnValue: <_i7.TV>[]) as List<_i7.TV>);
  @override
  set popularMovies(List<_i7.TV>? _popularMovies) =>
      super.noSuchMethod(Invocation.setter(#popularMovies, _popularMovies),
          returnValueForMissingStub: null);
  @override
  _i6.RequestState get topRatedState =>
      (super.noSuchMethod(Invocation.getter(#topRatedState),
          returnValue: _i6.RequestState.Empty) as _i6.RequestState);
  @override
  set topRatedState(_i6.RequestState? _topRatedState) =>
      super.noSuchMethod(Invocation.setter(#topRatedState, _topRatedState),
          returnValueForMissingStub: null);
  @override
  List<_i7.TV> get topRatedMovies =>
      (super.noSuchMethod(Invocation.getter(#topRatedMovies),
          returnValue: <_i7.TV>[]) as List<_i7.TV>);
  @override
  set topRatedMovies(List<_i7.TV>? _topRatedMovies) =>
      super.noSuchMethod(Invocation.setter(#topRatedMovies, _topRatedMovies),
          returnValueForMissingStub: null);
  @override
  _i5.TvListState get state => (super.noSuchMethod(Invocation.getter(#state),
      returnValue: _FakeTvListState_3()) as _i5.TvListState);
  @override
  _i8.Stream<_i5.TvListState> get stream =>
      (super.noSuchMethod(Invocation.getter(#stream),
              returnValue: Stream<_i5.TvListState>.empty())
          as _i8.Stream<_i5.TvListState>);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  void add(_i5.TvListEvent? event) =>
      super.noSuchMethod(Invocation.method(#add, [event]),
          returnValueForMissingStub: null);
  @override
  void onEvent(_i5.TvListEvent? event) =>
      super.noSuchMethod(Invocation.method(#onEvent, [event]),
          returnValueForMissingStub: null);
  @override
  void emit(_i5.TvListState? state) =>
      super.noSuchMethod(Invocation.method(#emit, [state]),
          returnValueForMissingStub: null);
  @override
  void on<E extends _i5.TvListEvent>(
          _i9.EventHandler<E, _i5.TvListState>? handler,
          {_i9.EventTransformer<E>? transformer}) =>
      super.noSuchMethod(
          Invocation.method(#on, [handler], {#transformer: transformer}),
          returnValueForMissingStub: null);
  @override
  void onTransition(
          _i9.Transition<_i5.TvListEvent, _i5.TvListState>? transition) =>
      super.noSuchMethod(Invocation.method(#onTransition, [transition]),
          returnValueForMissingStub: null);
  @override
  _i8.Future<void> close() => (super.noSuchMethod(Invocation.method(#close, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i8.Future<void>);
  @override
  void onChange(_i9.Change<_i5.TvListState>? change) =>
      super.noSuchMethod(Invocation.method(#onChange, [change]),
          returnValueForMissingStub: null);
  @override
  void addError(Object? error, [StackTrace? stackTrace]) =>
      super.noSuchMethod(Invocation.method(#addError, [error, stackTrace]),
          returnValueForMissingStub: null);
  @override
  void onError(Object? error, StackTrace? stackTrace) =>
      super.noSuchMethod(Invocation.method(#onError, [error, stackTrace]),
          returnValueForMissingStub: null);
}
